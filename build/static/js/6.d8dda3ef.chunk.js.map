{"version":3,"sources":["views/RegisterView.js"],"names":["styles","form","width","label","display","flexDirection","marginBottom","RegisterView","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","authOperations","register","style","autoComplete","type","onChange","variant"],"mappings":"wPAMMA,EAAS,CACbC,KAAM,CACJC,MAAO,KAETC,MAAO,CACLC,QAAS,OACTC,cAAe,SACfC,aAAc,KAIH,SAASC,IACtB,IAAMC,EAAWC,cACjB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUP,EAAoB,EAApBA,KAAMQ,EAAc,EAAdA,MACtC,OAAQR,GACN,IAAK,OACH,OAAOC,EAAQO,GACjB,IAAK,QACH,OAAOL,EAASK,GAClB,IAAK,WACH,OAAOH,EAAYG,GACrB,QACE,SAYN,OACE,gCACE,8CAEA,uBAAMC,SAZW,SAAAC,GACnBA,EAAEC,iBACFd,EAASe,IAAeC,SAAS,CAAEb,OAAME,QAAOE,cAChDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAOoBS,MAAOzB,EAAOC,KAAMyB,aAAa,MAA/D,UACE,wBAAOD,MAAOzB,EAAOG,MAArB,iBAEE,uBAAOwB,KAAK,OAAOhB,KAAK,OAAOQ,MAAOR,EAAMiB,SAAUX,OAGxD,wBAAOQ,MAAOzB,EAAOG,MAArB,kBAEE,uBACEwB,KAAK,QACLhB,KAAK,QACLQ,MAAON,EACPe,SAAUX,OAId,wBAAOQ,MAAOzB,EAAOG,MAArB,qBAEE,uBACEwB,KAAK,WACLhB,KAAK,WACLQ,MAAOJ,EACPa,SAAUX,OAId,cAAC,IAAD,CAAQU,KAAK,SAASE,QAAQ,UAA9B","file":"static/js/6.d8dda3ef.chunk.js","sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from '../redux/auth';\nimport { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst styles = {\n  form: {\n    width: 320,\n  },\n  label: {\n    display: 'flex',\n    flexDirection: 'column',\n    marginBottom: 15,\n  },\n};\n\nexport default function RegisterView() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value);\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(authOperations.register({ name, email, password }));\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <div>\n      <h1>Registration</h1>\n\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Name\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </label>\n\n        <label style={styles.label}>\n          Email\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Password\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <Button type=\"submit\" variant=\"success\">\n          Зарегистрироваться\n        </Button>\n      </form>\n    </div>\n  );\n}\n"],"sourceRoot":""}