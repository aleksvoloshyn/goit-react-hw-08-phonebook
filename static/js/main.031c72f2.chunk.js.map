{"version":3,"sources":["Components/Container/Container.jsx","Components/Navigation.js","Components/UserMenu/default-avatar-1.png","Components/UserMenu/UserMenu.js","Components/AuthNav.js","Components/AppBar.js","Components/PrivateRoute.js","Components/PublicRoute.js","App.js","redux/contacts/contacts-reducer.js","Components/Notifications/Notifications.jsx","redux/store.js","index.js","redux/contacts/contacts-actions.js","Components/Container/Container.module.css","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js"],"names":["Container","props","className","s","container","children","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","Navigation","isLoggedIn","useSelector","authSelectors","getIsLoggedIn","to","exact","style","activeStyle","alignItems","avatar","marginRight","name","UserMenu","dispatch","useDispatch","getUsername","defaultAvatar","src","alt","width","Button","variant","type","onClick","authOperations","logOut","AuthNav","header","justifyContent","AppBar","PrivateRoute","redirectTo","routeProps","PublicRoute","restricted","shouldRedirect","HomeView","lazy","RegisterView","LoginView","Contacts","App","isFetchingCurrentUser","getIsFetchingCurrent","useEffect","fetchCurrentUser","fallback","path","items","createReducer","actions","fetchContactSuccess","state","action","payload","addContactSuccess","store","addNotification","title","message","insert","animationIn","animationOut","dismiss","duration","onScreen","deleteContactSuccess","touchSlidingExit","swipe","timingFunction","delay","fade","filter","item","id","_","toLowerCase","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","configureStore","reducer","contacts","contactsReducer","auth","persistReducer","authReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById","fetchContactRequest","createAction","fetchContactError","addContactRequest","addContactError","deleteContactRequest","deleteContactError","deleteContact","module","exports","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","console","log","logIn","thunkAPI","getState","persistedToken","rejectWithValue","get","operations","user","authSlice","createSlice","initialState","email","extraReducers","fulfilled","pending","rejected"],"mappings":"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","file":"static/js/main.031c72f2.chunk.js","sourcesContent":["import s from './Container.module.css';\nfunction Container(props) {\n  return <div className={s.container}> {props.children}</div>;\n}\n\nexport { Container };\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { authSelectors } from '../redux/auth';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst Navigation = () => {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <nav>\n      <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n        Main\n      </NavLink>\n      {isLoggedIn && (\n        <NavLink\n          to=\"/contacts\"\n          exact\n          style={styles.link}\n          activeStyle={styles.activeLink}\n        >\n          Contacts\n        </NavLink>\n      )}\n    </nav>\n  );\n};\n\nexport default Navigation;\n","export default __webpack_public_path__ + \"static/media/default-avatar-1.af8f2e39.png\";","import { useDispatch, useSelector } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\nimport defaultAvatar from './default-avatar-1.png';\nimport { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nexport default function UserMenu() {\n  const dispatch = useDispatch();\n  const name = useSelector(authSelectors.getUsername);\n  const avatar = defaultAvatar;\n\n  return (\n    <div style={styles.container}>\n      <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n      <span style={styles.name}>WELCOME, {name}</span>\n      <Button\n        variant=\"danger\"\n        type=\"button\"\n        onClick={() => dispatch(authOperations.logOut())}\n      >\n        Выйти\n      </Button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nexport default function AuthNav() {\n  return (\n    <div>\n      <NavLink\n        to=\"/register\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Registration\n      </NavLink>\n      <NavLink\n        to=\"/login\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        Login\n      </NavLink>\n    </div>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu';\nimport AuthNav from './AuthNav';\nimport { authSelectors } from '../redux/auth';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    // borderBottom: '1px solid #2A363B',\n  },\n};\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <header style={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PrivateRoute({\n  children,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  return (\n    <Route {...routeProps}>\n      {isLoggedIn ? children : <Redirect to={redirectTo} />}\n    </Route>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../redux/auth';\n\nexport default function PublicRoute({\n  children,\n  restricted = false,\n  redirectTo = '/',\n  ...routeProps\n}) {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\n  const shouldRedirect = isLoggedIn && restricted;\n  return (\n    <Route {...routeProps}>\n      {shouldRedirect ? <Redirect to={redirectTo} /> : children}\n    </Route>\n  );\n}\n","import './App.css';\n\nimport { Container } from './Components/Container/Container';\nimport { Switch, Route } from 'react-router-dom';\n// import HomeView from './views/HomeView';\n// import RegisterView from './views/RegisterView';\n// import LoginView from './views/LoginView';\n// import Contacts from './views/Contacts';\nimport { authOperations, authSelectors } from './redux/auth/';\n\nimport AppBar from './Components/AppBar';\n\nimport 'react-notifications-component/dist/theme.css';\nimport 'animate.css';\nimport { useEffect, Suspense, lazy } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PrivateRoute from './Components/PrivateRoute';\nimport PublicRoute from './Components/PublicRoute';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst Contacts = lazy(() => import('./views/Contacts'));\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {isFetchingCurrentUser ? (\n        <h1>LOADING</h1>\n      ) : (\n        <>\n          {' '}\n          <AppBar />\n          <Switch>\n            <Suspense fallback={<p>loading...</p>}>\n              <PublicRoute exact path=\"/\">\n                <HomeView />\n              </PublicRoute>\n              <PublicRoute exact path=\"/register\" restricted>\n                <RegisterView />\n              </PublicRoute>\n              <PublicRoute\n                exact\n                path=\"/login\"\n                redirectTo=\"/contacts\"\n                restricted\n              >\n                <LoginView />\n              </PublicRoute>\n              <PrivateRoute path=\"/contacts\" redirectTo=\"/login\">\n                <Contacts />\n              </PrivateRoute>\n            </Suspense>\n          </Switch>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contacts-actions';\n\nimport {\n  onDeleteNotification,\n  onSuccsessNotification,\n} from '../../Components/Notifications/Notifications';\n\nconst items = createReducer([], {\n  [actions.fetchContactSuccess]: (state, action) => {\n    return action.payload;\n  },\n\n  [actions.addContactSuccess]: (state, action) => {\n    onSuccsessNotification();\n    return [...state, action.payload];\n  },\n\n  [actions.deleteContactSuccess]: (state, action) => {\n    onDeleteNotification();\n    return state.filter(item => {\n      return item.id !== action.payload;\n    });\n  },\n});\n\n// const loading = createReducer(false, {\n//   [actions.addContactRequest]: () => true,\n//   [actions.addContactSuccess]: () => false,\n//   [actions.addContactError]: () => false,\n//   [actions.deleteContactRequest]: () => true,\n//   [actions.deleteContactSuccess]: () => false,\n//   [actions.deleteContactError]: () => false,\n// });\n\nconst filter = createReducer([], {\n  [actions.filter]: (_, action) => [action.payload.toLowerCase()],\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  // loading,\n});\n","import { store } from 'react-notifications-component';\nexport const onSuccsessNotification = () => {\n  store.addNotification({\n    title: 'Congratulations!',\n    message: 'Контакт успешно добавлен в справочник',\n    type: 'success',\n    insert: 'top',\n    container: 'top-right',\n    animationIn: ['animate__animated', 'animate__fadeIn'],\n    animationOut: ['animate__animated', 'animate__fadeOut'],\n    dismiss: {\n      duration: 5000,\n      onScreen: true,\n    },\n  });\n};\n\nexport const onErrorNotification = () => {\n  store.addNotification({\n    title: 'Ошибочка...!',\n    message: 'Такой контакт уже есть',\n    type: 'danger', // 'default', 'success', 'info', 'warning'\n    container: 'top-right', // where to position the notifications\n    animationIn: ['animate__animated', 'animate__fadeIn'],\n    animationOut: ['animate__animated', 'animate__fadeOut'],\n    dismiss: {\n      duration: 2000,\n      onScreen: true,\n    },\n    touchSlidingExit: {\n      swipe: {\n        duration: 400,\n        timingFunction: 'ease-out',\n        delay: 0,\n      },\n      fade: {\n        duration: 400,\n        timingFunction: 'ease-out',\n        delay: 0,\n      },\n    },\n  });\n  //   alert('Такой контакт уже есть');\n};\n\nexport const onDeleteNotification = () => {\n  store.addNotification({\n    title: 'Информация!',\n    message: 'Констакт успешно удален',\n    type: 'warning', // 'default', 'success', 'info', 'warning'\n    container: 'top-right', // where to position the notifications\n    animationIn: ['animate__animated', 'animate__fadeIn'],\n    animationOut: ['animate__animated', 'animate__fadeOut'],\n    dismiss: {\n      duration: 2000,\n      onScreen: true,\n    },\n    touchSlidingExit: {\n      swipe: {\n        duration: 400,\n        timingFunction: 'ease-out',\n        delay: 0,\n      },\n      fade: {\n        duration: 400,\n        timingFunction: 'ease-out',\n        delay: 0,\n      },\n    },\n  });\n};\n","// import { combineReducers } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// import contactsReducer from './contacts/contacts-reducer';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\nimport { authReducer } from './auth';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n  middleware: middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\n// console.log(store);s\n\nexport const persistor = persistStore(store);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './../src/redux/store';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n    ;\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactRequest = createAction('contacts/fetchContactRequest');\nconst fetchContactSuccess = createAction('contacts/fetchContactSuccess');\nconst fetchContactError = createAction('contacts/fetchContactError');\n\nconst addContactRequest = createAction('contacts/addContactRequest');\nconst addContactSuccess = createAction('contacts/addContactSuccess');\nconst addContactError = createAction('contacts/addContactError');\n\nconst deleteContactRequest = createAction('contacts/deleteContactRequest');\nconst deleteContactSuccess = createAction('contacts/deleteContactSuccess');\nconst deleteContactError = createAction('contacts/deleteContactError');\n\nconst deleteContact = createAction('contacts/delete');\n\nconst filter = createAction('contacts/filter');\n\nconst actions = {\n  fetchContactRequest, // pending\n  fetchContactSuccess, // fulfilled\n  fetchContactError, // rejected\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n\n  filter,\n  deleteContact,\n};\n\nexport default actions;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__33Pnt\",\"container__label\":\"Container_container__label__415fu\",\"container__contacts\":\"Container_container__contacts__33Djx\"};","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n\r\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n  },\r\n};\r\n\r\n// REGISTER\r\nconst register = createAsyncThunk('auth/register', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n});\r\n\r\n// LOGIN\r\nconst logIn = createAsyncThunk('auth/login', async credentials => {\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n    token.set(data.token);\r\n    return data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n});\r\n\r\n// LOGOUT\r\nconst logOut = createAsyncThunk('auth/logout', async () => {\r\n  try {\r\n    await axios.post('/users/logout');\r\n    token.unset();\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n});\r\n\r\n// GET CURRENT USER (for regresh)\r\nconst fetchCurrentUser = createAsyncThunk(\r\n  'auth/getCurrentUser',\r\n  async (_, thunkAPI) => {\r\n    const state = thunkAPI.getState();\r\n    const persistedToken = state.auth.token;\r\n\r\n    if (persistedToken === null) {\r\n      console.log('there is no such token');\r\n      return thunkAPI.rejectWithValue();\r\n    }\r\n\r\n    token.set(persistedToken);\r\n    try {\r\n      const { data } = await axios.get('/users/current');\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  },\r\n);\r\n\r\nconst operations = {\r\n  register,\r\n  logOut,\r\n  logIn,\r\n  fetchCurrentUser,\r\n};\r\nexport default operations;\r\n","const getIsLoggedIn = state => state.auth.isLoggedIn;\r\n\r\nconst getUsername = state => state.auth.user.name;\r\n\r\nconst getIsFetchingCurrent = state => state.auth.isFetchingCurrentUser;\r\n\r\nconst authSelectors = {\r\n  getIsLoggedIn,\r\n  getUsername,\r\n  getIsFetchingCurrent,\r\n};\r\nexport default authSelectors;\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport authOperations from './auth-operations';\r\n\r\nconst initialState = {\r\n  user: { name: null, email: null },\r\n  token: null,\r\n  isLoggedIn: false,\r\n  isFetchingCurrentUser: false,\r\n};\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  extraReducers: {\r\n    [authOperations.register.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logIn.fulfilled](state, action) {\r\n      state.user = action.payload.user;\r\n      state.token = action.payload.token;\r\n      state.isLoggedIn = true;\r\n    },\r\n    [authOperations.logOut.fulfilled](state, action) {\r\n      state.user = { name: null, email: null };\r\n      state.token = null;\r\n      state.isLoggedIn = false;\r\n    },\r\n\r\n    [authOperations.fetchCurrentUser.pending](state) {\r\n      state.isFetchingCurrentUser = true;\r\n    },\r\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\r\n      state.user = action.payload;\r\n      state.isLoggedIn = true;\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n    [authOperations.fetchCurrentUser.rejected](state) {\r\n      state.isFetchingCurrentUser = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport default authSlice.reducer;\r\n"],"sourceRoot":""}